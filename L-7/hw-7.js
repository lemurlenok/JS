// - Створити функцію конструктор для об'єктів User з полями id, name, surname , email, phone
// створити пустий масив, наповнити його 10 об'єктами new User(....)

function User (id, name, surname , email, phone) {
    this.id = id;
    this.name = name;
    this.surname = surname;
    this.email = email;
    this.phone = phone;
    console.log(this);

}
const Users= [];


new User ('1', 'Vanya', '@Crezy_bees', 'Crezy_bees@gmail.com','+380675261456');
new User('2', 'Lana', '@SnuSmumric', 'Lana.S@gmail.com','+380950658924');
new User ('3', 'Alex', '@Alex27$', 'my.litle.ponny@gmail.com','+380502568472');
new User ('4', 'Petya', '@PinkRabbit', 'PinkRabbit@ukr.net','+380662581592');
new User ('5', 'Vasya', '@Vasya.M', 'mongoose.vasya@gmail.com','+380985261456');
new User ('6', 'Andrew', '@Saburo_Sakai', 'Saburo_Sakai@ukr.net','+380990858324');
new User ('7', 'Valya', '@interior+', 'interior_plus@i.ua','+380967425867');
new User ('8', 'Nikita', '@Nikitos', 'Nikita_ne_@gmail.com','+380632511511');
new User ('9', 'Oleg', '@Pegas', 'Pgas@gmail.com','+380677777777');
new User ('10', 'Paskal', '@jolly_gnome', 'jolly_gnome@gmail.com','+380677952244');

// // - Взяти масив з  User[] з попереднього завдання, та відфільтрувати , залишивши тільки об'єкти з парними id (filter)
const filterUsers = Users.filter(user => parseInt(user.id) % 2 === 0);
console.log(filterUsers);
//



//even id
// - Взяти масив з  User[] з попереднього завдання, та відсортувати його по id. по зростанню (sort)

//
// - створити класс для об'єктів Client з полями id, name, surname , email, phone, order (поле є масивом зі списком товарів)
// створити пустий масив, наповнити його 10 об'єктами Client
// - Взяти масив (Client [] з попереднього завдання).Відсортувати його по кількості товарів в полі order по зростанню. (sort)
//
//
// - Створити функцію конструктор яка дозволяє створювати об'єкти car, з властивостями модель, виробник, рік випуску, максимальна швидкість, об'єм двигуна. додати в об'єкт функції:
// -- drive () - яка виводить в консоль `їдемо зі швидкістю ${максимальна швидкість} на годину`
// -- info () - яка виводить всю інформацію про автомобіль в форматі `назва поля - значення поля`
// -- increaseMaxSpeed (newSpeed) - яка підвищує значення максимальної швидкості на значення newSpeed
// -- changeYear (newValue) - змінює рік випуску на значення newValue
// -- addDriver (driver) - приймає об'єкт який "водій" з довільним набором полів, і додає його в поточний об'єкт car
//
//
// - (Те саме, тільки через клас)
// Створити клас який дозволяє створювати об'єкти car, з властивостями модель, виробник, рік випуску, максимальна швидкість, об'єм двигуна. додати в об'єкт функції:
// -- drive () - яка виводить в консоль `їдемо зі швидкістю ${максимальна швидкість} на годину`
// -- info () - яка виводить всю інформацію про автомобіль в форматі `назва поля - значення поля`
// -- increaseMaxSpeed (newSpeed) - яка підвищує значення максимальної швидкості на значення newSpeed
// -- changeYear (newValue) - змінює рік випуску на значення newValue
// -- addDriver (driver) - приймає об'єкт який "водій" з довільним набором полів, і додає його в поточний об'єкт car
//
//
//
// -створити класс/функцію конструктор попелюшка з полями ім'я, вік, розмір ноги. Створити масив з 10 попелюшок.
// Сторити об'єкт класу "принц" за допомоги класу який має поля ім'я, вік, туфелька яку він знайшов.
//     За допомоги циклу знайти яка попелюшка повинна бути з принцом.
//     Додатково, знайти необхідну попелюшку за допомоги функції масиву find та відповідного колбеку